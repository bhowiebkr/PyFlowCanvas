{
    "nodes": [
        {
            "uuid": "file-node-1",
            "title": "File Input",
            "pos": [ 50, 300 ],
            "code": "@node_entry\ndef get_filename() -> str:\n    # The graph will analyze this file\n    return 'sample.txt'"
        },
        {
            "uuid": "file-node-2",
            "title": "Read File Content",
            "pos": [ 350, 300 ],
            "code": "@node_entry\ndef read_file(filename: str) -> str:\n    try:\n        with open(filename, 'r') as f:\n            return f.read()\n    except FileNotFoundError:\n        return f'ERROR: File \"{filename}\" not found.'"
        },
        {
            "uuid": "file-node-3",
            "title": "Analyze Text",
            "pos": [ 650, 300 ],
            "code": "from typing import Tuple\n\n@node_entry\ndef analyze_content(content: str) -> Tuple[int, int, int]:\n    if content.startswith('ERROR:'):\n        return 0, 0, 0\n    lines = content.splitlines()\n    words = content.split()\n    return len(lines), len(words), len(content)"
        },
        {
            "uuid": "file-node-4",
            "title": "Format Report",
            "pos": [ 950, 300 ],
            "code": "@node_entry\ndef format_report(filename: str, line_count: int, word_count: int, char_count: int) -> str:\n    report = (\n        f'--- Analysis Report for: {filename} ---\\n'\n        f'  Line Count: {line_count}\\n'\n        f'  Word Count: {word_count}\\n'\n        f'  Character Count: {char_count}'\n    )\n    return report"
        },
        {
            "uuid": "file-node-5",
            "title": "Print Report",
            "pos": [ 1250, 300 ],
            "code": "@node_entry\ndef print_final_report(report: str):\n    print(report)"
        }
    ],
    "connections": [
        {
            "start_node_uuid": "file-node-1",
            "start_pin_name": "output_1",
            "end_node_uuid": "file-node-2",
            "end_pin_name": "filename"
        },
        {
            "start_node_uuid": "file-node-1",
            "start_pin_name": "output_1",
            "end_node_uuid": "file-node-4",
            "end_pin_name": "filename"
        },
        {
            "start_node_uuid": "file-node-2",
            "start_pin_name": "output_1",
            "end_node_uuid": "file-node-3",
            "end_pin_name": "content"
        },
        {
            "start_node_uuid": "file-node-3",
            "start_pin_name": "output_1",
            "end_node_uuid": "file-node-4",
            "end_pin_name": "line_count"
        },
        {
            "start_node_uuid": "file-node-3",
            "start_pin_name": "output_2",
            "end_node_uuid": "file-node-4",
            "end_pin_name": "word_count"
        },
        {
            "start_node_uuid": "file-node-3",
            "start_pin_name": "output_3",
            "end_node_uuid": "file-node-4",
            "end_pin_name": "char_count"
        },
        {
            "start_node_uuid": "file-node-4",
            "start_pin_name": "output_1",
            "end_node_uuid": "file-node-5",
            "end_pin_name": "report"
        }
    ]
}
