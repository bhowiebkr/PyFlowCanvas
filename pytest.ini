[tool:pytest]
# Test discovery optimization - focus only on test directories
testpaths = tests

# Test markers for categorization
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (moderate speed)
    gui: GUI tests (slower, requires QApplication)
    headless: Headless tests (fast, no GUI)
    slow: Slow tests (>5 seconds)
    
# Parallel execution settings
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    # Parallel execution with auto worker detection
    -n auto
    # Show test durations for optimization
    --durations=10
    # Fail fast on first failure for quick feedback
    -x
    # Show local variables in tracebacks
    --showlocals

# Test file patterns
python_files = test_*.py *_test.py
python_classes = Test* *Tests
python_functions = test_*

# Minimum version requirements
minversion = 6.0

# Test timeout to prevent hanging tests (10 second max per CLAUDE.md)
timeout = 10

# Warnings configuration
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    # Ignore Qt warnings that are common in GUI tests
    ignore:.*QApplication.*:RuntimeWarning
    ignore:.*QWidget.*:RuntimeWarning

# Coverage configuration
[coverage:run]
source = src
omit = 
    tests/*
    venv/*
    venvs/*
    */__pycache__/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.: