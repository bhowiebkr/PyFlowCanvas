{
    "requirements": [
        "requests"
    ],
    "nodes": [
        {
            "uuid": "api-url-node",
            "title": "API Endpoint",
            "pos": [ 50, 200 ],
            "code": "@node_entry\ndef get_api_url() -> str:\n    # Fetches a random fact about cats\n    return 'https://catfact.ninja/fact'"
        },
        {
            "uuid": "api-fetch-node",
            "title": "Fetch Data from API",
            "pos": [ 350, 200 ],
            "code": "import requests\n\n@node_entry\ndef fetch_data(url: str) -> str:\n    try:\n        response = requests.get(url)\n        response.raise_for_status() # Raises an exception for bad status codes\n        data = response.json()\n        return data.get('fact', 'Could not find a cat fact.')\n    except requests.exceptions.RequestException as e:\n        return f'API Error: {e}'"
        },
        {
            "uuid": "format-output-node",
            "title": "Format Output",
            "pos": [ 650, 200 ],
            "code": "@node_entry\ndef format_output(cat_fact: str) -> str:\n    return f'API Result:\\n---\\n{cat_fact}\\n---'"
        },
        {
            "uuid": "print-node",
            "title": "Print Result",
            "pos": [ 950, 200 ],
            "code": "@node_entry\ndef print_result(message: str):\n    print(message)"
        }
    ],
    "connections": [
        {
            "start_node_uuid": "api-url-node",
            "start_pin_name": "output_1",
            "end_node_uuid": "api-fetch-node",
            "end_pin_name": "url"
        },
        {
            "start_node_uuid": "api-fetch-node",
            "start_pin_name": "output_1",
            "end_node_uuid": "format-output-node",
            "end_pin_name": "cat_fact"
        },
        {
            "start_node_uuid": "format-output-node",
            "start_pin_name": "output_1",
            "end_node_uuid": "print-node",
            "end_pin_name": "message"
        }
    ]
}
